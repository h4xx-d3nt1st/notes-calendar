<!doctype html>
<html lang="ru" class="h-full">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Notes Calendar ‚Äî UI</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: { extend: {
        boxShadow: { soft: '0 10px 30px rgba(0,0,0,.08)' },
        animation: { fade: 'fade .2s ease-in-out' },
        keyframes: { fade: {'0%':{opacity:0}, '100%':{opacity:1}} }
      } }
    };
  </script>
  <style>
    .glass{backdrop-filter:blur(10px);background:rgba(255,255,255,.7)}
    .dark .glass{background:rgba(17,24,39,.6)}
  </style>
</head>
<body class="h-full bg-gradient-to-b from-slate-50 to-slate-100 dark:from-slate-900 dark:to-slate-950 text-slate-900 dark:text-slate-100">
  <div class="min-h-full max-w-5xl mx-auto p-4 md:p-8 space-y-4">

    <header class="glass rounded-2xl p-4 md:p-6 shadow-soft flex items-center justify-between">
      <div class="flex items-center gap-3">
        <div class="h-10 w-10 rounded-xl bg-indigo-600 text-white grid place-items-center font-bold">NC</div>
        <div>
          <h1 class="text-xl md:text-2xl font-bold">Notes Calendar</h1>
          <p class="text-xs md:text-sm text-slate-500 dark:text-slate-400">–°–æ–∑–¥–∞–≤–∞–π, —Å–º–æ—Ç—Ä–∏ –∏ —É–¥–∞–ª—è–π –∑–∞–º–µ—Ç–∫–∏ –ø–æ –¥–Ω—è–º</p>
        </div>
      </div>
      <div class="flex items-center gap-2">
        <button id="openSwagger" class="text-xs md:text-sm px-3 py-2 rounded-lg border border-slate-300/60 dark:border-slate-700 hover:bg-slate-100 dark:hover:bg-slate-800">Swagger</button>
        <button id="themeToggle" class="text-xs md:text-sm px-3 py-2 rounded-lg bg-slate-900 text-white dark:bg-slate-100 dark:text-slate-900">üåô/‚òÄÔ∏è</button>
      </div>
    </header>

    <section class="glass rounded-2xl p-4 md:p-6 shadow-soft">
      <div class="grid grid-cols-1 md:grid-cols-5 gap-3">
        <div class="md:col-span-2">
          <label class="block text-sm mb-1">–î–∞—Ç–∞</label>
          <input id="date" type="date" class="w-full px-3 py-2 rounded-lg bg-white/70 dark:bg-slate-800/70 border border-slate-300/60 dark:border-slate-700 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
        </div>
        <div>
          <label class="block text-sm mb-1">–ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã (isdayoff)</label>
          <input id="cc" type="text" value="ru" maxlength="3" class="w-full px-3 py-2 rounded-lg bg-white/70 dark:bg-slate-800/70 border border-slate-300/60 dark:border-slate-700 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
        </div>
        <div class="flex items-end">
          <button id="loadBtn" class="w-full px-4 py-2 rounded-xl bg-indigo-600 text-white hover:bg-indigo-700">–û–±–Ω–æ–≤–∏—Ç—å –¥–µ–Ω—å</button>
        </div>
        <div class="flex items-end">
          <button id="delDayBtn" class="w-full px-4 py-2 rounded-xl bg-rose-600 text-white hover:bg-rose-700">–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å</button>
        </div>
      </div>
      <div id="dayStatus" class="mt-4 p-3 rounded-xl border border-slate-200 dark:border-slate-800 bg-white/50 dark:bg-slate-900/50"></div>
    </section>

    <section class="glass rounded-2xl p-4 md:p-6 shadow-soft">
      <h2 class="font-semibold mb-2">–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞</h2>
      <div class="flex flex-col md:flex-row gap-2">
        <input id="noteContent" type="text" placeholder="–¢–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏‚Ä¶" class="flex-1 px-3 py-2 rounded-lg bg-white/70 dark:bg-slate-800/70 border border-slate-300/60 dark:border-slate-700 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
        <button id="addBtn" class="px-4 py-2 rounded-xl bg-emerald-600 text-white hover:bg-emerald-700">–î–æ–±–∞–≤–∏—Ç—å</button>
      </div>
      <p class="text-xs text-slate-500 dark:text-slate-400 mt-2">–ò–Ω–¥–µ–∫—Å –≤ –¥–Ω–µ –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.</p>
    </section>

    <section class="glass rounded-2xl p-2 md:p-4 shadow-soft">
      <div class="flex items-center justify-between px-2">
        <h2 class="font-semibold">–ó–∞–º–µ—Ç–∫–∏</h2>
        <span id="notesCount" class="text-sm text-slate-500 dark:text-slate-400"></span>
      </div>
      <div id="notesList" class="mt-2 grid gap-2"></div>
    </section>
  </div>

  <div id="toasts" class="fixed bottom-4 right-4 space-y-2 z-50"></div>
  <div id="loader" class="hidden fixed inset-0 z-40 grid place-items-center bg-black/20 dark:bg-black/30">
    <div class="h-16 w-16 border-4 border-white/60 border-t-indigo-500 rounded-full animate-spin"></div>
  </div>

  <script>
    // helpers
    const $ = (id) => document.getElementById(id);
    const show = (el) => el.classList.remove('hidden');
    const hide = (el) => el.classList.add('hidden');
    function toast(msg, ok=true){
      const t=document.createElement('div');
      t.className=`px-4 py-3 rounded-xl text-sm shadow-soft ${ok?'bg-emerald-600 text-white':'bg-rose-600 text-white'}`;
      t.textContent=msg; $('toasts').appendChild(t); setTimeout(()=>t.remove(),2500);
    }
    function escapeHtml(s){return String(s).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#039;')}
    function badge(kind,label){
      const m={WORKDAY:'bg-slate-200 text-slate-800 dark:bg-slate-800 dark:text-slate-100',
               HOLIDAY:'bg-rose-200 text-rose-900 dark:bg-rose-900 dark:text-rose-100',
               SHORTDAY:'bg-amber-200 text-amber-900 dark:bg-amber-900 dark:text-amber-100',
               UNAVAILABLE:'bg-yellow-200 text-yellow-900 dark:bg-yellow-900 dark:text-yellow-100'};
      return `<span class="px-2 py-1 rounded-lg text-xs ${m[kind]||m.WORKDAY}">${escapeHtml(label)} (${kind})</span>`;
    }

    // API
const api = {
  getDayNotes: async (date, cc) =>
    (await fetch(`/api/v1/notes/day-notes?date=${encodeURIComponent(date)}&cc=${encodeURIComponent(cc || 'ru')}`)).json(),

  createNote: async (date, content) => {
    const r = await fetch('/api/v1/notes', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ date, content })
    });
    if (!r.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è');
    return r.json();
  },

  deleteOne: async (id) => {
    const r = await fetch(`/api/v1/notes/${encodeURIComponent(id)}`, { method: 'DELETE' });
    if (r.status !== 204) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å');
  },

  deleteDay: async (date) => {
    const r = await fetch(`/api/v1/notes/day?date=${encodeURIComponent(date)}`, { method: 'DELETE' });
    if (!r.ok) throw new Error('–û—à–∏–±–∫–∞ ' + r.status);
    return Number(await r.text()); // —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫
  },

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º content + date, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è–ª–æ—Å—å not null –ø–æ–ª–µ
  updateNote: async (id, content) => {
    const currentDate = current?.date || document.getElementById('date')?.value;
    const r = await fetch(`/api/v1/notes/${encodeURIComponent(id)}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ content, date: currentDate })
    });
    if (!r.ok) {
      const msg = await r.text();
      throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å (${r.status}): ${msg}`);
    }
    return r.json();
  }
};
    // state
    let current={date:null, cc:'ru', day:null};

    async function loadDay(){
      if(!$('date').value) return toast('–í—ã–±–µ—Ä–∏ –¥–∞—Ç—É',false);
      current.date=$('date').value; current.cc=$('cc')?$('cc').value||'ru':'ru';
      show($('loader'));
      try{
        const day=await api.getDayNotes(current.date,current.cc); current.day=day;
        $('dayStatus').innerHTML = `
          <div class="flex flex-wrap items-center gap-2">
            <span class="px-2 py-1 rounded-lg bg-indigo-100 text-indigo-900 dark:bg-indigo-900 dark:text-indigo-100">
              ${escapeHtml(current.date)} ‚Ä¢ ${escapeHtml((current.cc||'ru').toUpperCase())}
            </span>
            ${badge(day.holidayKind, day.holidayLabel)}
            <span class="text-sm text-slate-600 dark:text-slate-300">–ü—Ä–∞–∑–¥–Ω–∏–∫: ${escapeHtml(day.holidayName)}</span>
          </div>`;
        renderNotes(day.notes||[]);
      }catch(e){ toast('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: '+e.message,false); }
      finally{ hide($('loader')); }
    }

    function renderNotes(notes){
      const list=$('notesList'); $('notesCount').textContent=notes.length?`–í—Å–µ–≥–æ: ${notes.length}`:'–ù–µ—Ç –∑–∞–º–µ—Ç–æ–∫'; list.innerHTML='';
      notes.forEach(n=>{
        const card=document.createElement('div');
        card.className="rounded-xl border border-slate-200 dark:border-slate-800 bg-white/60 dark:bg-slate-900/60 p-3 flex items-start justify-between gap-3";
        card.innerHTML=`
          <div class="min-w-0">
            <div class="text-xs text-slate-500 dark:text-slate-400">#${n.indexInDay} ‚Ä¢ ID ${n.id} ‚Ä¢ ${escapeHtml(n.date)}</div>
            <div class="mt-1 break-words">${escapeHtml(n.content)}</div>
          </div>
          <div class="flex gap-2 shrink-0">
            <button data-id="${n.id}" class="delOne px-3 py-1 rounded-lg bg-rose-600 text-white hover:bg-rose-700">–£–¥–∞–ª–∏—Ç—å</button>
          </div>`;
        list.appendChild(card);
      });
      document.querySelectorAll('.delOne').forEach(btn=>{
        btn.onclick=async ()=>{ const id=btn.getAttribute('data-id'); if(!confirm(`–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É ID ${id}?`)) return;
          show($('loader')); try{ await api.deleteOne(id); toast(`–£–¥–∞–ª–µ–Ω–æ #${id}`); await loadDay(); } catch(e){ toast(e.message,false); } finally{ hide($('loader')); } };
      });
    }

    async function addNote(){
      const content=$('noteContent').value.trim(); if(!current.date) return toast('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –¥–∞—Ç—É',false); if(!content) return toast('–ü—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç',false);
      show($('loader'));
      try{ const res=await api.createNote(current.date,content); $('noteContent').value=''; toast(`–°–æ–∑–¥–∞–Ω–æ ID=${res.id} (index=${res.indexInDay})`); await loadDay(); }
      catch(e){ toast(e.message,false); } finally{ hide($('loader')); }
    }

    // init
    document.addEventListener('DOMContentLoaded', ()=>{
      const today=new Date().toISOString().slice(0,10);
      $('date').value=today;
      $('openSwagger').onclick=()=>window.open('/swagger-ui/index.html#/', '_blank');
      $('themeToggle').onclick=()=>{ const dark=!document.documentElement.classList.contains('dark'); document.documentElement.classList.toggle('dark',dark); localStorage.setItem('theme',dark?'dark':'light'); };
      $('loadBtn').onclick = async () => {
  if (!current.date) return toast('–í—ã–±–µ—Ä–∏ –¥–∞—Ç—É', false);
  show($('loader'));
  try {
    await loadDay();
    toast(`–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã (${current.date})`, true);
  } catch (e) {
    toast('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏', false);
  } finally {
    hide($('loader'));
  }
};
      $('addBtn').onclick=addNote;
      $('delDayBtn').onclick=async ()=>{ if(!current.date) return toast('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –¥–∞—Ç—É',false); if(!confirm(`–£–¥–∞–ª–∏—Ç—å –í–°–ï –∑–∞–º–µ—Ç–∫–∏ –∑–∞ ${current.date}?`)) return;
        show($('loader')); try{ const c=await api.deleteDay(current.date); toast(`–£–¥–∞–ª–µ–Ω–æ: ${c}`); await loadDay(); } catch(e){ toast(e.message,false); } finally{ hide($('loader')); } };
      $('date').addEventListener('change', loadDay);
      const ccInput=$('cc'); if(ccInput) ccInput.addEventListener('change', loadDay);
      // –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
      loadDay();
      // —Ç–µ–º–∞
      const saved=localStorage.getItem('theme'); const prefersDark=window.matchMedia('(prefers-color-scheme: dark)').matches;
      document.documentElement.classList.toggle('dark', saved? saved==='dark' : prefersDark);
    });
  </script>
<script>
// === Inline-—Ä–µ–¥–∞–∫—Ç–æ—Ä –∑–∞–º–µ—Ç–æ–∫ ===
function renderNotes(notes){
  const list = $('notesList');
  $('notesCount').textContent = (notes && notes.length) ? `–í—Å–µ–≥–æ: ${notes.length}` : '–ù–µ—Ç –∑–∞–º–µ—Ç–æ–∫';
  list.innerHTML = '';

  (notes || []).forEach(n => {
    const card = document.createElement('div');
    card.className = "rounded-xl border border-slate-200 dark:border-slate-800 bg-white/60 dark:bg-slate-900/60 p-3 flex items-start justify-between gap-3";
    card.innerHTML = `
      <div class="min-w-0 flex-1">
        <div class="text-xs text-slate-500 dark:text-slate-400">
          #${n.indexInDay} ‚Ä¢ ID ${n.id} ‚Ä¢ ${escapeHtml(n.date || current.date)}
        </div>
        <div data-role="view" class="mt-1 break-words cursor-text select-text">
          ${escapeHtml(n.content || '')}
        </div>
        <div data-role="edit-wrap" class="hidden mt-2 flex flex-col md:flex-row gap-2">
          <input data-role="input" type="text"
                 class="flex-1 px-3 py-2 rounded-lg bg-white/70 dark:bg-slate-800/70 border border-slate-300/60 dark:border-slate-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                 placeholder="–¢–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏‚Ä¶" />
          <div class="flex gap-2 justify-end">
            <button data-role="save" class="px-3 py-2 rounded-lg bg-emerald-600 text-white hover:bg-emerald-700">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
            <button data-role="cancel" class="px-3 py-2 rounded-lg border border-slate-300/60 dark:border-slate-700">–û—Ç–º–µ–Ω–∞</button>
          </div>
        </div>
      </div>
      <div class="flex gap-2 shrink-0">
        <button data-role="edit" class="px-3 py-1 rounded-lg bg-indigo-600 text-white hover:bg-indigo-700">‚úèÔ∏è</button>
        <button class="delOne px-3 py-1 rounded-lg bg-rose-600 text-white hover:bg-rose-700" data-id="${n.id}">–£–¥–∞–ª–∏—Ç—å</button>
      </div>
    `;

    const viewEl    = card.querySelector('[data-role="view"]');
    const editWrap  = card.querySelector('[data-role="edit-wrap"]');
    const inputEl   = card.querySelector('[data-role="input"]');
    const btnEdit   = card.querySelector('[data-role="edit"]');
    const btnSave   = card.querySelector('[data-role="save"]');
    const btnCancel = card.querySelector('[data-role="cancel"]');

    function enterEdit(){
      inputEl.value = (n.content || '');
      viewEl.classList.add('hidden');
      editWrap.classList.remove('hidden');
      inputEl.focus();
      inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);
    }
    function leaveEdit(){
      editWrap.classList.add('hidden');
      viewEl.classList.remove('hidden');
    }

    btnEdit.onclick   = enterEdit;
    viewEl.ondblclick = enterEdit;
    btnCancel.onclick = leaveEdit;

    btnSave.onclick = async () => {
      const newText = inputEl.value.trim();
      if (newText === (n.content || '')) { leaveEdit(); return; }
      show($('loader'));
      try {
        await api.updateNote(n.id, newText);
        toast('–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ', true);
        await loadDay();
      } catch(e) {
        toast(e.message || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è', false);
      } finally {
        hide($('loader'));
      }
    };

    inputEl.addEventListener('keydown', (ev)=>{
      if (ev.key === 'Enter')  btnSave.click();
      if (ev.key === 'Escape') btnCancel.click();
    });

    list.appendChild(card);
  });

  // –ü–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–≤–µ—à–∏–≤–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã —É–¥–∞–ª–µ–Ω–∏—è
  document.querySelectorAll('.delOne').forEach(btn=>{
    btn.onclick = async () => {
      const id = btn.getAttribute('data-id');
      if (!(await confirmDialog(`–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É ID ${id}?`))) return;
      show($('loader'));
      try { await api.deleteOne(id); toast(`–£–¥–∞–ª–µ–Ω–æ #${id}`); await loadDay(); }
      catch(e){ toast(e.message, false); }
      finally { hide($('loader')); }
    };
  });
}
</script>

</body>
</html>
