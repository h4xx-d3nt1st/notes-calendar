package com.example.notes.dto;

import com.example.notes.entity.Note;
import java.time.LocalDate;

/** Простой DTO + ручной builder, чтобы компилировались старые вызовы .builder() */
public class NoteDto {
    private Long id;
    private LocalDate date;
    private String content;
    private Integer indexInDay;

    public NoteDto() {}

    public NoteDto(Long id, LocalDate date, String content, Integer indexInDay) {
        this.id = id;
        this.date = date;
        this.content = content;
        this.indexInDay = indexInDay;
    }

    /** Фабричный метод: сущность -> DTO */
    public static NoteDto from(Note n) {
        if (n == null) return null;
        return new NoteDto(n.getId(), n.getDate(), n.getContent(), n.getIndexInDay());
    }

    /** Ручной билдер, чтобы не тащить Lombok */
    public static Builder builder() { return new Builder(); }
    public static class Builder {
        private Long id;
        private LocalDate date;
        private String content;
        private Integer indexInDay;

        public Builder id(Long id) { this.id = id; return this; }
        public Builder date(LocalDate date) { this.date = date; return this; }
        public Builder content(String content) { this.content = content; return this; }
        public Builder indexInDay(Integer indexInDay) { this.indexInDay = indexInDay; return this; }

        public NoteDto build() { return new NoteDto(id, date, content, indexInDay); }
    }

    // --- getters/setters ---
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public LocalDate getDate() { return date; }
    public void setDate(LocalDate date) { this.date = date; }
    public String getContent() { return content; }
    public void setContent(String content) { this.content = content; }
    public Integer getIndexInDay() { return indexInDay; }
    public void setIndexInDay(Integer indexInDay) { this.indexInDay = indexInDay; }
}
